import pygame
import random
pygame.init()
#game var
exit = False
screen = pygame.display.set_mode((400, 800))
#player var
p1x = 0
p1y = 700
#ball var
bx = 200
by = 400
bVx= 5
bVy= 5
#bricks
class Brick:
    def __init__(self, x, y):
        self.xpos = x
        self.ypos = y
        self.color = (random.randrange(100, 250),random.randrange(100, 250),random.randrange(100, 250))
        self.isDead = False
    def draw(self):
        pygame.draw.rect(screen, (self.color), (self.xpos, self.ypos, 50, 16), 5)
    def collide(self):
        if self.xpos<bx and self.xpos+50>bx and self.ypos<by and self.ypos+16 >by:
            print("brk collided")
            return True
        else:
            return False
    def killBlock(self):
        self.isDead = True

#         if bx > x and bx < x and by < y:
#             bVy *= 1
#         if bx > p1x and bx < p1x and by < p1y:
#             bVy *= -1

b1 = Brick(0, 50)
b2 = Brick(50, 50)
b3 = Brick(100, 50)
b4 = Brick(150, 50)
b5 = Brick(200, 50)
b6 = Brick(250, 50)
b7 = Brick(300, 50)
b8 = Brick(350, 50)
#stuff
pygame.display.set_caption("damn")

clock = pygame.time.Clock()

while exit == False:
    clock.tick(60)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            exit = True
    #collision
    b1.collide()
    if b1.collide()==True and b1.isDead==False:
        #flip velocity of ball
        bVy *= -1
        b1.isDead = True
    if b2.collide()==True and b2.isDead==False:
        #flip velocity of ball
        bVy *= -1
        b2.isDead = True
    if b3.collide()==True and b3.isDead==False:
        #flip velocity of ball
        bVy *= -1
        b3.isDead = True
    if b4.collide()==True and b4.isDead==False:
        #flip velocity of ball
        bVy *= -1
        b4.isDead = True
    if b5.collide()==True and b5.isDead==False:
        #flip velocity of ball
        bVy *= -1
        b5.isDead = True
    if b6.collide()==True and b6.isDead==False:
        #flip velocity of ball
        bVy *= -1
        b6.isDead = True
    if b7.collide()==True and b7.isDead==False:
        #flip velocity of ball
        bVy *= -1
        b7.isDead = True
    if b8.collide()==True and b8.isDead==False:
        #flip velocity of ball
        bVy *= -1
        b8.isDead = True
   
        

    if p1x<bx and p1x+100>bx and p1y<by and p1y+100 >by:
            bVy *= -1
        
    #ball velocity
    bx += bVx
    by += bVy
    #Boundries
    if bx - 12 < 0 or bx + 12 > 400:
        bVx *= -1
    if by - 12 < 0 or by + 12 > 800:
        bVy *= -1
    
    #input
    keys = pygame.key.get_pressed()
    if keys[pygame.K_a]:
        p1x -= 5
    if keys[pygame.K_d]:
        p1x += 5
    #render
    screen.fill((0, 0, 0))
    if b1.isDead == False:
        b1.draw()
    if b2.isDead == False:
        b2.draw()
    if b3.isDead == False:
        b3.draw()
    if b4.isDead == False:
        b4.draw()
    if b5.isDead == False:
        b5.draw()
    if b6.isDead == False:
        b6.draw()
    if b7.isDead == False:
        b7.draw()
    if b8.isDead == False:
        b8.draw()
    pygame.draw.circle(screen, (255, 255, 255), (bx, by), 25)
    pygame.draw.rect(screen, (255, 255, 255), (p1x, p1y, 100, 20), 5)
    pygame.display.flip()

pygame.quit()
